Написать программу, которая запрашивает с клавиатуры массив целых чисел и его размер (динамический массив) после чего делит его на 3 части т.е. создаёт 3 новых массива поделить необходимо так, чтобы суммы элементов получившихся частей различались минимально.
Размер любой суммы должны быть максимально близки друг к другу. Делится в одном месте, а не перебор всех элементов. Именно разделить массив, а не перебирать.
Рекомендации:
1.	Реализовать в стиле ООП для этого написать класс.
2.	В качестве данных указатели, размеры массивов и другие необходимые параметры данных.
3.	В качестве методов: конструктор, инициализирующий указатели и размеры массивов нулями, деструктор освобождающий память. Как шаблон смотреть практическую 4_3 .
4.	Метод для создания массива (метод вызывает консоль, запрашивает у пользователя размер и просит заполнить элементами и создаёт основной динамический массив).
5.	Метод: делит основной массив на 3 части (оптимально по ТЗ) и создаёт 3 производных (полученных в результате деления) массива заполнив их элементами.
6.	Хотелось, чтобы массивы создавались и в них были записаны элементы и естественно они динамические.
7.	Метод для вывода на экран. Выводит основной массив, выводит 3 полученных в результате деления их суммы и максимальную разность. 
8.	Обеспечить корректность работы в случае если методы будут вызываться не по порядку.
9.	Если вызывается метод подсчёта до ввода, то ничего не делать.
10.	Если вывод до ввода массива/ подсчёта должен написать подсчёт не был и не было и ввода.
11.	Флаговые переменные разрешены.
12.	Дружественный интерфейс.
13.	Дополнительные библиотеки запрещены.
14.	Нужно смотреть чтобы было ограничение было от 3х и больше. Введите размер, но не менее 3х.
15.	В созданных массивах после разбивки обязательно должны быть элементы.
16.	Кто хочет добавить сложности: в первом методе обеспечить возможность перезаписи (метод создания исходного массива) при желании он должен быть перезаписан т.е. старый быть уничтожен и новый создан. Тогда во 2м методе при пересчёте старый массив должен быть уничтожен и созданы новые. Вывод не изменится.
17.	Использование внешних функций по отношению к классу.
